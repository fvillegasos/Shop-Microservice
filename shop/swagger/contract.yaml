openapi: 3.0.3
info:
  title: Shop-Microservice
  description: |-
    This is a simple Shop Application that will be useful for understanding the basics of Spring H2, JPA, Hibernate...
  termsOfService: http://swagger.io/terms/
  contact:
    email: francisco.villegasostos@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
tags:
  - name: product
    description: API for all the product related operations.
paths:
  '/product/products':
    get:
      tags:
        - product
      summary: List all the products
      operationId: listProducts
      responses:
        '204':
          description: No Content
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
        '500':
          description: Internal Server Error
  '/product/product':
    post:
      tags:
        - product
      summary: Saves a new Product
      operationId: postProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductIn'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductOut'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
components:
  schemas:
    Products:
      type: object
      properties:
        listOfProducts:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    Product:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: Clean cut t-shirt.
        price:
          type: number
          example: 35
        sale:
          type: boolean
          example: false
        percentage:
          type: number
          example: 15
        category:
          type: string
          example: T-SHIRT
      required:
        - id
        - name
        - price
        - sale
        - category
    ProductIn:
      type: object
      properties:
        name:
          type: string
          example: Clean cut t-shirt.
        price:
          type: number
          example: 35
        sale:
          type: boolean
          example: false
        percentage:
          type: number
          example: 15
        category:
          type: string
          example: T-SHIRT
      required:
        - name
        - price
        - category
    ProductOut:
      type: object
      properties:
        id:
          type: number
          example: 1
      required:
        - id